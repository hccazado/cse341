{
  "swagger": "2.0",
  "info": {
    "title": "library management",
    "description": "A small library management API for managing books, customers and borrows.",
    "version": "1.0.0"
  },
  "host": "cse341-6f28.onrender.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "paths": {
    "/customers/{id}/borrows": {
      "get": {
        "description": "Returns a customer with id, and details about its borrowd books",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/customers/{id}": {
      "get": {
        "description": "Returns a customer with id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "description": "Update a customer with id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "firstName": {
                  "example": "any"
                },
                "lastName": {
                  "example": "any"
                },
                "email": {
                  "example": "any"
                },
                "dob": {
                  "example": "any"
                },
                "borrowedBooks": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "412": {
            "description": "Precondition Failed"
          }
        }
      },
      "delete": {
        "description": "Delete a customer with ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/customers/": {
      "post": {
        "description": "Creates a new customer",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "firstName": {
                  "example": "any"
                },
                "lastName": {
                  "example": "any"
                },
                "email": {
                  "example": "any"
                },
                "dob": {
                  "example": "any"
                },
                "borrowedBooks": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "412": {
            "description": "Precondition Failed"
          }
        }
      },
      "get": {
        "description": "Returns all stored customers",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/books/": {
      "get": {
        "description": "Returns all stored books",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "description": "Create a new book",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "example": "any"
                },
                "isbn": {
                  "example": "any"
                },
                "author": {
                  "example": "any"
                },
                "category": {
                  "example": "any"
                },
                "quantity": {
                  "example": "any"
                },
                "availableQuantity": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "412": {
            "description": "Precondition Failed"
          }
        }
      }
    },
    "/books/{id}": {
      "get": {
        "description": "Returns a stored book with id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "description": "Update a book with id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "example": "any"
                },
                "isbn": {
                  "example": "any"
                },
                "author": {
                  "example": "any"
                },
                "category": {
                  "example": "any"
                },
                "quantity": {
                  "example": "any"
                },
                "availableQuantity": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "delete": {
        "description": "Delete a book with id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/library/{customerid}/{bookid}": {
      "get": {
        "description": "Add a book objectId to customer's   after checking if the customer has already borrowed it.",
        "parameters": [
          {
            "name": "customerid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "bookid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "delete": {
        "description": "Executes the process of returning a borrowed book from a customer",
        "parameters": [
          {
            "name": "customerid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "bookid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    }
  }
}